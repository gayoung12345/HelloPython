a = 10
b = 20
temp = a        # a값을 temp에 저장(temp = 10)
a = b           # b값을 a에 저장 (a = 20)
b = temp        # temp값을 b에 저장 (b = 10)
print(a, b)     # 20, 10

c = 10
d = 20
c, d = d ,c     # c에 d의 값이 들어가고, d에 c의 값이 들어가는 일이 동시에 일어남
print(c, d)     # 20, 10

print()

def magu_print(x, y, *rest): # 인자에 별표(*)를  붙여두면 그 이후에 들어오는 것은 모두 튜플에 저장
    print(x, y, rest)

# 인자로 2개 이상만 주면 알아서 처리
magu_print(1, 2, 3, 5, 6, 7, 9 ,10) # 1 2 (3, 5, 6, 7, 9, 10) -> 2 이후에 들어간 숫자는 모두 튜플로 묶이므로 이렇게 출력됨

print()

t = ('a', 'b', 'c') # 튜플을 생성할 때는 괄호를 써도 되고 안써도 된다.
empty = ()          # 단, 비어있는 튜플을 만들 때는 괄호를 반드시 써야한다.
one = 5,            # 원소를 하나만 가진 튜플을 만들 때에는 원소 뒤에 콤마(,)를 붙여야 한다.

# 튜플은 리스트와 다르게 원소의 값을 직접 바꿀 수 없으므로, 문자열처럼 오려붙이는 방법을 사용해야 한다.
p = (1,2,3)
q = p[:1] + (5,) + p[2:] # q에 p의 0번째값(1보다 앞까지) + 튜플 5 + 2번째 값부터 마지막 값 을 복사
print(q) # (1, 5, 3)

r = p[:1], 5, p[2:] # q에 p의 0번째값(1보다 앞까지) + 5 + 2번째 값부터 마지막 값 을 복사
print(r) # ((1,), 5, (3,))

# 튜플 -> 리스트
p = (1,2,3)     # 튜플p로 리스트q 생성
q = list(p) 
print(q) # [1, 2, 3]
r = tuple(q)    # 리스트q로 튜플 r 생성
print(r) # (1, 2, 3)